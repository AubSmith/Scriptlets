
# Server HealthCheck Script

[cmdletbinding()]

Param(  # Set sleep time (This is in Seconds)

  [switch]$version,

  [string]$mainserver

) 

$VERSION_NUMBER_CHANGELOG = @{

    '2017/01/10' = 'No change';

}

$VERSION_NUMBER = $VERSION_NUMBER_CHANGELOG.KEYS | sort | select -last 1

$scriptname = $MyInvocation.MyCommand.Name

$username   = $env:USERNAME

$userdomain = $env:USERDOMAIN

$tempPath   = $env:temp 

$ServerName = $env:COMPUTERNAME

$VERSION_NUMBER = $VERSION_NUMBER_CHANGELOG.KEYS | sort | select -last 1

if ($version) {

   Write-host "Script: $Scriptname"

   Write-host "UserName: $username"

   Write-host "UserDomain: $userdomain"

   Write-host "Version: $version_number"

  ;exit

}

function set-WindowTitle {

        param (

            [string]$title,

            [string]$append

        )

         

        if($title) {

            ((Get-Host).UI.RawUI).WindowTitle = $title

        }

        if($append) {

            $t = ((Get-Host).UI.RawUI).WindowTitle

            ((Get-Host).UI.RawUI).WindowTitle = "$t $append"

        }

    }

clear

$Result = @()  

$computername =$env:COMPUTERNAME

$Path = "C:\Scripts\Serverhealthcheck.csv"

if ($mainserver) { $Path = "\\$mainserver\Scripts$\Serverhealthcheck.csv"}

$AVGProc = Get-WmiObject -computername $computername win32_processor |  

Measure-Object -property LoadPercentage -Average | Select Average 

$OS = gwmi -Class win32_operatingsystem -computername $computername | 

Select-Object @{Name = "MemoryUsage"; Expression = {"{0:N2}" -f ((($_.TotalVisibleMemorySize - $_.FreePhysicalMemory)*100)/ $_.TotalVisibleMemorySize) }} 

$vol = Get-WmiObject -Class win32_Volume -ComputerName $computername -Filter "DriveLetter = 'C:'" | 

Select-object @{Name = "C PercentFree"; Expression = {"{0:N2}" -f  (($_.FreeSpace / $_.Capacity)*100) } } 

$checkdate = Get-Date -format yyyy-MM-dd-HH:mm:ss; 

 

  if ($PSVersionTable.PSVersion.major -match "2"){

      

                                                $result = new-object PSObject 

                                                $result    | add-member -membertype NoteProperty -name  "ServerName" -value $computername

                                                $result    | add-member -membertype NoteProperty -name  "PowerShellVersion" -value $PSVersionTable.PSVersion.major

                                                $result    | add-member -membertype NoteProperty -name  "ServerCheckVer" -value $VERSION_NUMBER

                                                $result    | add-member -membertype NoteProperty -name  "CPULoad" -value "$($AVGProc.Average)%"

                                                $result    | add-member -membertype NoteProperty -name  "MemLoad" -value "$($OS.MemoryUsage)%"

                                                $result    | add-member -membertype NoteProperty -name  "CDrive" -value "$($vol.'C PercentFree')%"

                                                $result    | add-member -membertype NoteProperty -name  "Checkdate" -value  $checkdate

                                                $result    | add-member -membertype NoteProperty -name  "UserContext" -value  "$userdomain\$username"

                                                }else{

                $result += [PSCustomObject] @{  

                                                ServerName = "$computername"

                                                PowerShellVersion =$PSVersionTable.PSVersion.major

                                                ServerCheckVer = $VERSION_NUMBER

                                                CPULoad = "$($AVGProc.Average)%"

                                                MemLoad = "$($OS.MemoryUsage)%"

                                                CDrive = "$($vol.'C PercentFree')%"

                                                Checkdate = $checkdate

                                                UserContext = "$userdomain\$username"

                                            } 

    }

 $result |export-csv $path -NoTypeInformation

 $status = "$scriptname USER: $username VER:$VERSION_NUMBER LASTRUN: "+ $result.checkdate 

 set-windowtitle $status

 $result